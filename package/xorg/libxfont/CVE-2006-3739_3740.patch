# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../libxfont/CVE-2006-3739_3740.patch
# Copyright (C) 2006 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

diff -Nur libXfont-1.0.0-orig/src/Type1/afm.c libXfont-1.0.0/src/Type1/afm.c
--- libXfont-1.0.0-orig/src/Type1/afm.c	2005-07-10 02:30:06.000000000 +0300
+++ libXfont-1.0.0/src/Type1/afm.c	2006-09-13 14:43:06.000000000 +0300
@@ -37,6 +37,8 @@
 #include <X11/fonts/fontmisc.h>			/* for xalloc/xfree */
 #include "AFM.h"
 
+#include <limits.h>
+
 #define PBUF 256
 #define KBUF 20
 
@@ -118,6 +120,11 @@
             
             fi->nChars = atoi(p);
 
+	    if (fi->nChars < 0 || fi->nChars > INT_MAX / sizeof(Metrics)) {
+		xfree(afmbuf);
+		xfree(fi);
+		return(1);
+	    }
             fi->metrics = (Metrics *)xalloc(fi->nChars * 
                 sizeof(Metrics));
             if (fi->metrics == NULL) {
diff -Nur libXfont-1.0.0-orig/src/Type1/scanfont.c libXfont-1.0.0/src/Type1/scanfont.c
--- libXfont-1.0.0-orig/src/Type1/scanfont.c	2005-07-10 02:30:06.000000000 +0300
+++ libXfont-1.0.0/src/Type1/scanfont.c	2006-09-13 14:43:06.000000000 +0300
@@ -72,6 +72,8 @@
 #include "spaces.h"
 #include "fontfcn.h"
 #include "blues.h"
+
+#include <limits.h>
  
 #if XFONT_CID
 #define CID_BUFSIZE 80
@@ -654,6 +656,7 @@
   arrayP->data.valueP = tokenStartP;
 
   /* allocate FDArray */
+  /* No integer overflow since arrayP->len is unsigned short */
   FDArrayP = (psfont *)vm_alloc(arrayP->len*(sizeof(psfont)));
   if (!(FDArrayP)) return(SCAN_OUT_OF_MEMORY);
 
@@ -850,7 +853,8 @@
      }
      return(SCAN_OK);
    }
- 
+   if (N > INT_MAX / sizeof(psobj)) 
+       return (SCAN_ERROR);
    arrayP = (psobj *)vm_alloc(N*sizeof(psobj));
    if (!(arrayP) ) return(SCAN_OUT_OF_MEMORY);
    FontP->Subrs.len = N;
@@ -911,7 +915,7 @@
      }
      else return(rc);  /* if next token was not an Int */
    }
-   if (N<=0) return(SCAN_ERROR);
+   if (N<=0 || N > INT_MAX / sizeof(psdict)) return(SCAN_ERROR);
    /* save number of entries in the dictionary */
  
    dictP = (psdict *)vm_alloc((N+1)*sizeof(psdict));
@@ -1719,6 +1723,10 @@
     if (tokenType == TOKEN_INTEGER)
       rangecnt = tokenValue.integer;
 
+    if (rangecnt < 0 || rangecnt > INT_MAX / sizeof(spacerangecode)) {
+	rc = SCAN_ERROR;
+	break;
+    }
     /* ==> tokenLength, tokenTooLong, tokenType, and */
     /* tokenValue are now set                        */
 
diff -Nur libXfont-1.0.0-orig/src/Type1/util.c libXfont-1.0.0/src/Type1/util.c
--- libXfont-1.0.0-orig/src/Type1/util.c	2005-07-10 02:30:07.000000000 +0300
+++ libXfont-1.0.0/src/Type1/util.c	2006-09-13 14:43:06.000000000 +0300
@@ -104,7 +104,7 @@
   bytes = (bytes + 7) & ~7;
  
   /* Allocate the space, if it is available */
-  if (bytes <= vm_free) {
+  if (bytes > 0 && bytes <= vm_free) {
     answer = vm_next;
     vm_free -= bytes;
     vm_next += bytes;
