# --- T2-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# 
# T2 SDE: package/.../xine-lib/CVE-2006-6172.patch
# Copyright (C) 2006 The T2 SDE Project
# 
# More information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# --- T2-COPYRIGHT-NOTE-END ---

diff -Nur xine-lib-1.1.2-orig/src/input/libreal/asmrp.c xine-lib-1.1.2/src/input/libreal/asmrp.c
--- xine-lib-1.1.2-orig/src/input/libreal/asmrp.c	2004-08-27 18:34:16.000000000 +0000
+++ xine-lib-1.1.2/src/input/libreal/asmrp.c	2006-12-18 14:58:33.000000000 +0000
@@ -604,7 +604,7 @@
   return ret;
 }
 
-static int asmrp_eval (asmrp_t *p, int *matches) {
+static int asmrp_eval (asmrp_t *p, int *matches, int matchsize) {
 
   int rule_num, num_matches;
 
@@ -613,7 +613,7 @@
   asmrp_get_sym (p);
 
   rule_num = 0; num_matches = 0;
-  while (p->sym != ASMRP_SYM_EOF) {
+  while (p->sym != ASMRP_SYM_EOF && num_matches < matchsize - 1) {
 
     if (asmrp_rule (p)) {
       lprintf ("rule #%d is true\n", rule_num);
@@ -629,7 +629,7 @@
   return num_matches;
 }
 
-int asmrp_match (const char *rules, int bandwidth, int *matches) {
+int asmrp_match (const char *rules, int bandwidth, int *matches, int matchsize) {
 
   asmrp_t *p;
   int      num_matches;
@@ -641,7 +641,7 @@
   asmrp_set_id (p, "Bandwidth", bandwidth);
   asmrp_set_id (p, "OldPNMPlayer", 0);
 
-  num_matches = asmrp_eval (p, matches);
+  num_matches = asmrp_eval (p, matches, matchsize);
 
   asmrp_dispose (p);
 
diff -Nur xine-lib-1.1.2-orig/src/input/libreal/asmrp.h xine-lib-1.1.2/src/input/libreal/asmrp.h
--- xine-lib-1.1.2-orig/src/input/libreal/asmrp.h	2003-12-09 00:02:30.000000000 +0000
+++ xine-lib-1.1.2/src/input/libreal/asmrp.h	2006-12-18 14:58:33.000000000 +0000
@@ -37,6 +37,6 @@
 #ifndef HAVE_ASMRP_H
 #define HAVE_ASMRP_H
 
-int asmrp_match (const char *rules, int bandwidth, int *matches) ;
+int asmrp_match (const char *rules, int bandwidth, int *matches, int matchesizxe) ;
 
 #endif
diff -Nur xine-lib-1.1.2-orig/src/input/libreal/real.c xine-lib-1.1.2/src/input/libreal/real.c
--- xine-lib-1.1.2-orig/src/input/libreal/real.c	2006-07-09 14:37:40.000000000 +0000
+++ xine-lib-1.1.2/src/input/libreal/real.c	2006-12-18 14:58:33.000000000 +0000
@@ -476,7 +476,7 @@
 
     lprintf("calling asmrp_match with:\n%s\n%u\n", desc->stream[i]->asm_rule_book, bandwidth);
 
-    n=asmrp_match(desc->stream[i]->asm_rule_book, bandwidth, rulematches);
+    n=asmrp_match(desc->stream[i]->asm_rule_book, bandwidth, rulematches, sizeof(rulematches)/sizeof(rulematches[0]));
     for (j=0; j<n; j++) {
       lprintf("asmrp rule match: %u for stream %u\n", rulematches[j], desc->stream[i]->stream_id);
       sprintf(b,"stream=%u;rule=%u,", desc->stream[i]->stream_id, rulematches[j]);
